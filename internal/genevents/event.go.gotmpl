package goaction
// Code auto generated with `go run ./internal/genevents/main.go`. DO NOT EDIT

import (
	"encoding/json"
	"fmt"
	"os"
	
	"github.com/google/go-github/v31/github"
)

//go:generate go run ./internal/genevents/main.go

// A Github action triggering event.
// See https://help.github.com/en/actions/reference/events-that-trigger-workflows.
type EventType string

// All Github action event types.
const (
{{ range . }}   Event{{ camel . }} EventType = "{{ . }}"
{{ end }}
)
{{ range . }}
{{ if not ( skipInfoFunc .) }}
// {{ funcName . }} returns information about a current {{ pretty . }}.
func {{ funcName .}}() (*{{ retVal . }}, error) {
	if Event != Event{{ camel . }} {
		return nil, fmt.Errorf("not '{{ . }}' event")
	}
	var i {{ retVal . }}
	err := decodeEventInfo(&i)
	return &i, err
}
{{ end }}
{{ end }}

func decodeEventInfo(i interface{}) error {
	f, err := os.Open(eventPath)
	if err != nil {
		return err
	}
	defer f.Close()
	return json.NewDecoder(f).Decode(i)
}